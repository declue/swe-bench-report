diff --git a/django/contrib/auth/validators.py b/django/contrib/auth/validators.py
index b4878cfd45..5fc5b8676c 100644
--- a/django/contrib/auth/validators.py
+++ b/django/contrib/auth/validators.py
@@ -15,11 +15,36 @@ class ASCIIUsernameValidator(validators.RegexValidator):
     flags = re.ASCII
 
 
+@deconstructible
+@deconstructible
+class ASCIIUsernameValidator(validators.RegexValidator):
+    regex = r'\A[\w.@+-]+\Z'
+
+    message = _(
+        'Enter a valid username. This value may contain only English letters, '
+        'numbers, and @/./+/-/_ characters.'
+    )
+    flags = re.ASCII
+
 @deconstructible
 class UnicodeUsernameValidator(validators.RegexValidator):
-    regex = r'^[\w.@+-]+$'
+    regex = r'\A[\w.@+-]+\Z'
+
+
+@deconstructible
+class UnicodeUsernameValidator(validators.RegexValidator):
+    regex = r'\A[\w.@+-]+\Z'
+    message = _(
+        'Enter a valid username. This value may contain only letters, '
+        'numbers, and @/./+/-/_ characters.'
+    )
+    flags = 0
+
     message = _(
         'Enter a valid username. This value may contain only letters, '
         'numbers, and @/./+/-/_ characters.'
     )
     flags = 0
+
+
+
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..f3ad216043
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,32 @@
+import os
+os.environ['DJANGO_SETTINGS_MODULE'] = 'tests.settings'
+
+# Minimal Django settings for running this script
+from django.conf import settings
+
+settings.configure(
+    USE_I18N=False,
+)
+
+from django.core.exceptions import ValidationError
+from django.contrib.auth.validators import ASCIIUsernameValidator, UnicodeUsernameValidator
+
+def test_validators():
+    ascii_validator = ASCIIUsernameValidator()
+    unicode_validator = UnicodeUsernameValidator()
+
+    # Test with a username that ends in newline
+    try:
+        ascii_validator('test\n')
+        print("ASCIIUsernameValidator did not reject the username ending with a newline.")
+    except ValidationError as e:
+        print(f"ASCIIUsernameValidator correctly rejected the username: {e}")
+
+    try:
+        unicode_validator('test\n')
+    except ValidationError as e:
+        print(f"UnicodeUsernameValidator correctly rejected the username: {e}")
+
+if __name__ == '__main__':
+    test_validators()
+
