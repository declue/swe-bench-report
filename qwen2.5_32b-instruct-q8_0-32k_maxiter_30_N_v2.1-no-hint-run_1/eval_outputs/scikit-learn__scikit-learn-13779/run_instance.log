2024-11-07 15:34:28,167 - INFO - Environment image sweb.env.x86_64.aa92880033da20ca313928:latest found for scikit-learn__scikit-learn-13779
Building instance image sweb.eval.x86_64.scikit-learn__scikit-learn-13779:latest for scikit-learn__scikit-learn-13779
2024-11-07 15:34:28,169 - INFO - Image sweb.eval.x86_64.scikit-learn__scikit-learn-13779:latest already exists, skipping build.
2024-11-07 15:34:28,169 - INFO - Creating container for scikit-learn__scikit-learn-13779...
2024-11-07 15:34:28,211 - INFO - Container for scikit-learn__scikit-learn-13779 created: d9f4347c49eaccc80e90e5647f0aa48e11c7f005388d3ea93e04b8ed00405bf7
2024-11-07 15:34:29,044 - INFO - Container for scikit-learn__scikit-learn-13779 started: d9f4347c49eaccc80e90e5647f0aa48e11c7f005388d3ea93e04b8ed00405bf7
2024-11-07 15:34:29,044 - INFO - Intermediate patch for scikit-learn__scikit-learn-13779 written to logs/run_evaluation/20241107_153352/qwen2.5_32b-instruct-q8_0-32k_maxiter_30_N_v2.1-no-hint-run_1/scikit-learn__scikit-learn-13779/patch.diff, now applying to container...
2024-11-07 15:34:29,205 - INFO - Failed to apply patch to container, trying again...
2024-11-07 15:34:29,237 - INFO - >>>>> Applied Patch:
patching file reproduce_error.py
patching file sklearn/ensemble/voting.py

2024-11-07 15:34:29,477 - INFO - Git diff before:
diff --git a/sklearn/ensemble/voting.py b/sklearn/ensemble/voting.py
index 7afa7180c..c1d23bafc 100644
--- a/sklearn/ensemble/voting.py
+++ b/sklearn/ensemble/voting.py
@@ -29,13 +29,14 @@ from ..utils import Bunch
 
 def _parallel_fit_estimator(estimator, X, y, sample_weight=None):
     """Private function used to fit an estimator within a job."""
+    if estimator is None:
+        return None
     if sample_weight is not None:
         estimator.fit(X, y, sample_weight=sample_weight)
     else:
         estimator.fit(X, y)
     return estimator
 
-
 class _BaseVoting(_BaseComposition, TransformerMixin):
     """Base class for voting.
 
@@ -85,21 +86,34 @@ class _BaseVoting(_BaseComposition, TransformerMixin):
         names, clfs = zip(*self.estimators)
         self._validate_names(names)
 
+        n_isnone = np.sum([clf is None for _, clf in self.estimators])
+        if n_isnone == len(self.estimators):
+            raise ValueError('All estimators are None. At least one is '
+                             'required!')
         n_isnone = np.sum([clf is None for _, clf in self.estimators])
         if n_isnone == len(self.estimators):
             raise ValueError('All estimators are None. At least one is '
                              'required!')
 
+        # Skip any estimator that is set to `None`
         self.estimators_ = Parallel(n_jobs=self.n_jobs)(
                 delayed(_parallel_fit_estimator)(clone(clf), X, y,
                                                  sample_weight=sample_weight)
                 for clf in clfs if clf is not None)
 
+        self.named_estimators_ = Bunch()
+        for k, e in zip(self.estimators, self.estimators_):
+            # Ensure we only add non-None estimators to named_estimators_
+            if e is not None:
+                self.named_estimators_[k[0]] = e
+        return self
+
         self.named_estimators_ = Bunch()
         for k, e in zip(self.estimators, self.estimators_):
             self.named_estimators_[k[0]] = e
         return self
 
+
     def set_params(self, **params):
         """ Setting the parameters for the ensemble estimator
 
@@ -486,3 +500,8 @@ class VotingRegressor(_BaseVoting, RegressorMixin):
         """
         check_is_fitted(self, 'estimators_')
         return self._predict(X)
+
+
+
+
+
2024-11-07 15:34:29,478 - INFO - Eval script for scikit-learn__scikit-learn-13779 written to logs/run_evaluation/20241107_153352/qwen2.5_32b-instruct-q8_0-32k_maxiter_30_N_v2.1-no-hint-run_1/scikit-learn__scikit-learn-13779/eval.sh; copying to container...
2024-11-07 15:34:34,131 - INFO - Test runtime: 4.54 seconds
2024-11-07 15:34:34,131 - INFO - Test output for scikit-learn__scikit-learn-13779 written to logs/run_evaluation/20241107_153352/qwen2.5_32b-instruct-q8_0-32k_maxiter_30_N_v2.1-no-hint-run_1/scikit-learn__scikit-learn-13779/test_output.txt
2024-11-07 15:34:34,173 - INFO - Git diff after:
diff --git a/sklearn/ensemble/voting.py b/sklearn/ensemble/voting.py
index 7afa7180c..c1d23bafc 100644
--- a/sklearn/ensemble/voting.py
+++ b/sklearn/ensemble/voting.py
@@ -29,13 +29,14 @@ from ..utils import Bunch
 
 def _parallel_fit_estimator(estimator, X, y, sample_weight=None):
     """Private function used to fit an estimator within a job."""
+    if estimator is None:
+        return None
     if sample_weight is not None:
         estimator.fit(X, y, sample_weight=sample_weight)
     else:
         estimator.fit(X, y)
     return estimator
 
-
 class _BaseVoting(_BaseComposition, TransformerMixin):
     """Base class for voting.
 
@@ -85,21 +86,34 @@ class _BaseVoting(_BaseComposition, TransformerMixin):
         names, clfs = zip(*self.estimators)
         self._validate_names(names)
 
+        n_isnone = np.sum([clf is None for _, clf in self.estimators])
+        if n_isnone == len(self.estimators):
+            raise ValueError('All estimators are None. At least one is '
+                             'required!')
         n_isnone = np.sum([clf is None for _, clf in self.estimators])
         if n_isnone == len(self.estimators):
             raise ValueError('All estimators are None. At least one is '
                              'required!')
 
+        # Skip any estimator that is set to `None`
         self.estimators_ = Parallel(n_jobs=self.n_jobs)(
                 delayed(_parallel_fit_estimator)(clone(clf), X, y,
                                                  sample_weight=sample_weight)
                 for clf in clfs if clf is not None)
 
+        self.named_estimators_ = Bunch()
+        for k, e in zip(self.estimators, self.estimators_):
+            # Ensure we only add non-None estimators to named_estimators_
+            if e is not None:
+                self.named_estimators_[k[0]] = e
+        return self
+
         self.named_estimators_ = Bunch()
         for k, e in zip(self.estimators, self.estimators_):
             self.named_estimators_[k[0]] = e
         return self
 
+
     def set_params(self, **params):
         """ Setting the parameters for the ensemble estimator
 
@@ -486,3 +500,8 @@ class VotingRegressor(_BaseVoting, RegressorMixin):
         """
         check_is_fitted(self, 'estimators_')
         return self._predict(X)
+
+
+
+
+
2024-11-07 15:34:34,173 - INFO - Grading answer for scikit-learn__scikit-learn-13779...
2024-11-07 15:34:34,179 - INFO - report: {'scikit-learn__scikit-learn-13779': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['sklearn/ensemble/tests/test_voting.py::test_none_estimator_with_weights[X0-y0-voter0]', 'sklearn/ensemble/tests/test_voting.py::test_none_estimator_with_weights[X1-y1-voter1]']}, 'PASS_TO_PASS': {'success': ['sklearn/ensemble/tests/test_voting.py::test_estimator_init', 'sklearn/ensemble/tests/test_voting.py::test_predictproba_hardvoting', 'sklearn/ensemble/tests/test_voting.py::test_notfitted', 'sklearn/ensemble/tests/test_voting.py::test_majority_label_iris', 'sklearn/ensemble/tests/test_voting.py::test_tie_situation', 'sklearn/ensemble/tests/test_voting.py::test_weights_iris', 'sklearn/ensemble/tests/test_voting.py::test_weights_regressor', 'sklearn/ensemble/tests/test_voting.py::test_predict_on_toy_problem', 'sklearn/ensemble/tests/test_voting.py::test_predict_proba_on_toy_problem', 'sklearn/ensemble/tests/test_voting.py::test_multilabel', 'sklearn/ensemble/tests/test_voting.py::test_gridsearch', 'sklearn/ensemble/tests/test_voting.py::test_parallel_fit', 'sklearn/ensemble/tests/test_voting.py::test_sample_weight', 'sklearn/ensemble/tests/test_voting.py::test_sample_weight_kwargs', 'sklearn/ensemble/tests/test_voting.py::test_set_params', 'sklearn/ensemble/tests/test_voting.py::test_set_estimator_none', 'sklearn/ensemble/tests/test_voting.py::test_estimator_weights_format', 'sklearn/ensemble/tests/test_voting.py::test_transform'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for scikit-learn__scikit-learn-13779: resolved: False
2024-11-07 15:34:34,179 - INFO - Attempting to stop container sweb.eval.scikit-learn__scikit-learn-13779.20241107_153352...
2024-11-07 15:34:49,312 - INFO - Attempting to remove container sweb.eval.scikit-learn__scikit-learn-13779.20241107_153352...
2024-11-07 15:34:49,326 - INFO - Container sweb.eval.scikit-learn__scikit-learn-13779.20241107_153352 removed.
