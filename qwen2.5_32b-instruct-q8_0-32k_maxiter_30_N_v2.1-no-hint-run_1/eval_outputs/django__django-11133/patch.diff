diff --git a/django/http/response.py b/django/http/response.py
index 6a84e193ba..eb8e6a66cd 100644
--- a/django/http/response.py
+++ b/django/http/response.py
@@ -284,10 +284,19 @@ class HttpResponse(HttpResponseBase):
 
     streaming = False
 
+class HttpResponse(HttpResponseBase):
+    """
+    An HTTP response class with a string as content.
+    
+    This content that can be read, appended to, or replaced.
+    """
+
+    streaming = False
+
     def __init__(self, content=b'', *args, **kwargs):
         super().__init__(*args, **kwargs)
         # Content is a bytestring. See the `content` property methods.
-        self.content = content
+        self.content = content if not isinstance(content, memoryview) else bytes(content)
 
     def __repr__(self):
         return '<%(cls)s status_code=%(status_code)d%(content_type)s>' % {
@@ -556,3 +565,4 @@ class JsonResponse(HttpResponse):
         kwargs.setdefault('content_type', 'application/json')
         data = json.dumps(data, cls=encoder, **json_dumps_params)
         super().__init__(content=data, **kwargs)
+
diff --git a/test_memoryview.py b/test_memoryview.py
new file mode 100644
index 0000000000..e1406c42a4
--- /dev/null
+++ b/test_memoryview.py
@@ -0,0 +1,28 @@
+import os
+from django.conf import settings
+
+# Set up dummy settings for testing
+settings.configure(
+    SECRET_KEY='dummy_secret_key',
+    DEFAULT_CHARSET='utf-8'
+)
+
+from django.http import HttpResponse
+
+
+def test_response():
+    # String content
+    response = HttpResponse("My Content")
+    print(f'String content: {response.content}')
+    
+    # Bytes content
+    response = HttpResponse(b"My Content")
+    print(f'Bytes content: {response.content}')
+    
+    # memoryview content
+    response = HttpResponse(memoryview(b"My Content"))
+    print(f'memoryview content: {response.content}')
+
+if __name__ == '__main__':
+    test_response()
+
