+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   django/forms/widgets.py

no changes added to commit (use "git add" and/or "git commit -a")
+ git show
commit 903aaa35e5ceaa33bfc9b19b7f6da65ce5a91dd4
Author: Mariusz Felisiak <felisiak.mariusz@gmail.com>
Date:   Thu Sep 30 11:26:17 2021 +0200

    Fixed #33159 -- Reverted "Fixed #32970 -- Changed WhereNode.clone() to create a shallow copy of children."
    
    This reverts commit e441847ecae99dd1ccd0d9ce76dbcff51afa863c.
    
    A shallow copy is not enough because querysets can be reused and
    evaluated in nested nodes, which shouldn't mutate JOIN aliases.
    
    Thanks Michal Čihař for the report.

diff --git a/django/db/models/sql/where.py b/django/db/models/sql/where.py
index 160d5733b8..50ff13be75 100644
--- a/django/db/models/sql/where.py
+++ b/django/db/models/sql/where.py
@@ -148,7 +148,11 @@ class WhereNode(tree.Node):
         clone = self.__class__._new_instance(
             children=None, connector=self.connector, negated=self.negated,
         )
-        clone.children = self.children[:]
+        for child in self.children:
+            if hasattr(child, 'clone'):
+                clone.children.append(child.clone())
+            else:
+                clone.children.append(child)
         return clone
 
     def relabeled_clone(self, change_map):
diff --git a/tests/queries/tests.py b/tests/queries/tests.py
index fa87e7859c..9c1b41a395 100644
--- a/tests/queries/tests.py
+++ b/tests/queries/tests.py
@@ -1663,6 +1663,12 @@ class Queries5Tests(TestCase):
             'bar %s'
         )
 
+    def test_queryset_reuse(self):
+        # Using querysets doesn't mutate aliases.
+        authors = Author.objects.filter(Q(name='a1') | Q(name='nonexistent'))
+        self.assertEqual(Ranking.objects.filter(author__in=authors).get(), self.rank3)
+        self.assertEqual(authors.count(), 1)
+
 
 class SelectRelatedTests(TestCase):
     def test_tickets_3045_3288(self):
+ git diff 903aaa35e5ceaa33bfc9b19b7f6da65ce5a91dd4
diff --git a/django/forms/widgets.py b/django/forms/widgets.py
index 00c19e2c55..24c2ea5292 100644
--- a/django/forms/widgets.py
+++ b/django/forms/widgets.py
@@ -3,6 +3,8 @@ HTML Widget classes
 """
 
 import copy
+import json
+
 import datetime
 import warnings
 from collections import defaultdict
@@ -755,8 +757,6 @@ class SelectMultiple(Select):
         # An unselected <select multiple> doesn't appear in POST data, so it's
         # never known if the value is actually omitted.
         return False
-
-
 class RadioSelect(ChoiceWidget):
     input_type = 'radio'
     template_name = 'django/forms/widgets/radio.html'
@@ -772,6 +772,18 @@ class RadioSelect(ChoiceWidget):
             return ''
         return super().id_for_label(id_, index)
 
+    def create_option(self, name, value, label, selected, index, subindex=None, attrs=None):
+        context = super().create_option(name, value, label, selected, index, subindex, attrs)
+        if not value:
+            return context
+        # Convert the ModelChoiceIteratorValue to a hashable type (e.g., tuple or string) for use as a dictionary key.
+        if isinstance(value, dict):
+            key = tuple(sorted(value.items()))
+        else:
+            key = str(value)
+        if key in self.show_fields:  # This is a dict {1: ['first_name', 'last_name']}
+            context['attrs'] = {'data-fields': json.dumps(self.show_fields[key])}
+        return context
 
 class CheckboxSelectMultiple(RadioSelect):
     allow_multiple_selected = True
@@ -779,6 +791,9 @@ class CheckboxSelectMultiple(RadioSelect):
     template_name = 'django/forms/widgets/checkbox_select.html'
     option_template_name = 'django/forms/widgets/checkbox_option.html'
 
+    template_name = 'django/forms/widgets/checkbox_select.html'
+    option_template_name = 'django/forms/widgets/checkbox_option.html'
+
     def use_required_attribute(self, initial):
         # Don't use the 'required' attribute because browser validation would
         # require all checkboxes to be checked instead of at least one.
@@ -1086,3 +1101,5 @@ class SelectDateWidget(Widget):
             ('{}_{}'.format(name, interval) in data)
             for interval in ('year', 'month', 'day')
         )
+
+
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Installing build dependencies: started
  Installing build dependencies: finished with status 'done'
  Checking if build backend supports build_editable: started
  Checking if build backend supports build_editable: finished with status 'done'
  Getting requirements to build editable: started
  Getting requirements to build editable: finished with status 'done'
  Preparing editable metadata (pyproject.toml): started
  Preparing editable metadata (pyproject.toml): finished with status 'done'
Requirement already satisfied: asgiref>=3.3.2 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Django==4.1.dev20210930092617) (3.8.1)
Requirement already satisfied: sqlparse>=0.2.2 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Django==4.1.dev20210930092617) (0.5.1)
Requirement already satisfied: typing-extensions>=4 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from asgiref>=3.3.2->Django==4.1.dev20210930092617) (4.12.2)
Building wheels for collected packages: Django
  Building editable for Django (pyproject.toml): started
  Building editable for Django (pyproject.toml): finished with status 'done'
  Created wheel for Django: filename=Django-4.1.dev20210930092617-0.editable-py3-none-any.whl size=26699 sha256=2d003617a9c0aee7db6785f12a64fdba25bd7c766e1d47a24651732adfb7ced0
  Stored in directory: /tmp/pip-ephem-wheel-cache-71tdsld0/wheels/7d/66/67/70d1ee2124ccf21d601c352e25cdca10f611f7c8b3f9ffb9e4
Successfully built Django
Installing collected packages: Django
  Attempting uninstall: Django
    Found existing installation: Django 4.1.dev20210930092617
    Uninstalling Django-4.1.dev20210930092617:
      Successfully uninstalled Django-4.1.dev20210930092617
Successfully installed Django-4.1.dev20210930092617
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git checkout 903aaa35e5ceaa33bfc9b19b7f6da65ce5a91dd4 tests/model_forms/test_modelchoicefield.py
Updated 0 paths from e11e4698c8
+ git apply -v -
Checking patch tests/model_forms/test_modelchoicefield.py...
Applied patch tests/model_forms/test_modelchoicefield.py cleanly.
+ ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 model_forms.test_modelchoicefield
Creating test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Testing against Django installed in '/testbed/django'
Importing application model_forms
Found 24 test(s).
Skipping setup of unused database(s): other.
Operations to perform:
  Synchronize unmigrated apps: auth, contenttypes, messages, model_forms, sessions, staticfiles
  Apply all migrations: admin, sites
Synchronizing apps without migrations:
  Creating tables...
    Creating table django_content_type
    Creating table auth_permission
    Creating table auth_group
    Creating table auth_user
    Creating table django_session
    Creating table model_forms_person
    Creating table model_forms_category
    Creating table model_forms_writer
    Creating table model_forms_article
    Creating table model_forms_improvedarticle
    Creating table model_forms_improvedarticlewithparentlink
    Creating table model_forms_betterwriter
    Creating table model_forms_publication
    Creating table model_forms_publicationdefaults
    Creating table model_forms_author
    Creating table model_forms_author1
    Creating table model_forms_writerprofile
    Creating table model_forms_document
    Creating table model_forms_textfile
    Creating table model_forms_customff
    Creating table model_forms_filepathmodel
    Creating table model_forms_imagefile
    Creating table model_forms_optionalimagefile
    Creating table model_forms_noextensionimagefile
    Creating table model_forms_homepage
    Creating table model_forms_product
    Creating table model_forms_price
    Creating table model_forms_triple
    Creating table model_forms_articlestatus
    Creating table model_forms_inventory
    Creating table model_forms_book
    Creating table model_forms_derivedbook
    Creating table model_forms_explicitpk
    Creating table model_forms_post
    Creating table model_forms_datetimepost
    Creating table model_forms_derivedpost
    Creating table model_forms_bigint
    Creating table model_forms_customfieldforexclusionmodel
    Creating table model_forms_flexibledatepost
    Creating table model_forms_colour
    Creating table model_forms_colourfulitem
    Creating table model_forms_customerrormessage
    Creating table model_forms_character
    Creating table model_forms_stumpjoke
    Creating table model_forms_student
    Creating table model_forms_photo
    Creating table model_forms_uuidpk
    Creating table model_forms_strictassignmentfieldspecific
    Creating table model_forms_strictassignmentall
    Creating table model_forms_award
    Creating table model_forms_nullableuniquecharfieldmodel
    Creating table model_forms_number
    Creating table model_forms_numberstodice
    Creating table model_forms_dice
    Running deferred SQL...
Running migrations:
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying sites.0001_initial... OK
  Applying sites.0002_alter_domain_unique... OK
System check identified no issues (0 silenced).
test_basics (model_forms.test_modelchoicefield.ModelChoiceFieldTests) ... ok
test_choice_iterator_passes_model_to_widget (model_forms.test_modelchoicefield.ModelChoiceFieldTests) ... ERROR
test_choice_value_hash (model_forms.test_modelchoicefield.ModelChoiceFieldTests) ... ERROR
test_choices (model_forms.test_modelchoicefield.ModelChoiceFieldTests) ... ok
test_choices_bool (model_forms.test_modelchoicefield.ModelChoiceFieldTests) ... ok
test_choices_bool_empty_label (model_forms.test_modelchoicefield.ModelChoiceFieldTests) ... ok
test_choices_freshness (model_forms.test_modelchoicefield.ModelChoiceFieldTests) ... ok
test_choices_not_fetched_when_not_rendering (model_forms.test_modelchoicefield.ModelChoiceFieldTests) ... ok
test_choices_radio_blank (model_forms.test_modelchoicefield.ModelChoiceFieldTests) ... ok
test_clean_model_instance (model_forms.test_modelchoicefield.ModelChoiceFieldTests) ... ok
test_clean_to_field_name (model_forms.test_modelchoicefield.ModelChoiceFieldTests) ... ok
test_custom_choice_iterator_passes_model_to_widget (model_forms.test_modelchoicefield.ModelChoiceFieldTests) ... ERROR
test_deepcopies_widget (model_forms.test_modelchoicefield.ModelChoiceFieldTests) ... ok
test_disabled_modelchoicefield (model_forms.test_modelchoicefield.ModelChoiceFieldTests) ... ok
test_disabled_modelchoicefield_has_changed (model_forms.test_modelchoicefield.ModelChoiceFieldTests) ... ok
test_disabled_modelchoicefield_initial_model_instance (model_forms.test_modelchoicefield.ModelChoiceFieldTests) ... ok
test_disabled_modelmultiplechoicefield_has_changed (model_forms.test_modelchoicefield.ModelChoiceFieldTests) ... ok
test_disabled_multiplemodelchoicefield (model_forms.test_modelchoicefield.ModelChoiceFieldTests) ... ok
test_no_extra_query_when_accessing_attrs (model_forms.test_modelchoicefield.ModelChoiceFieldTests)
ModelChoiceField with RadioSelect widget doesn't produce unnecessary ... ERROR
test_num_queries (model_forms.test_modelchoicefield.ModelChoiceFieldTests)
Widgets that render multiple subwidgets shouldn't make more than one ... ERROR
test_overridable_choice_iterator (model_forms.test_modelchoicefield.ModelChoiceFieldTests)
Iterator defaults to ModelChoiceIterator and can be overridden with ... ok
test_queryset_manager (model_forms.test_modelchoicefield.ModelChoiceFieldTests) ... ok
test_queryset_none (model_forms.test_modelchoicefield.ModelChoiceFieldTests) ... ok
test_result_cache_not_shared (model_forms.test_modelchoicefield.ModelChoiceFieldTests) ... ok

======================================================================
ERROR: test_choice_iterator_passes_model_to_widget (model_forms.test_modelchoicefield.ModelChoiceFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/model_forms/test_modelchoicefield.py", line 296, in test_choice_iterator_passes_model_to_widget
    field.widget.render('name', []), (
  File "/testbed/django/forms/widgets.py", line 248, in render
    context = self.get_context(name, value, attrs)
  File "/testbed/django/forms/widgets.py", line 644, in get_context
    context['widget']['optgroups'] = self.optgroups(name, context['widget']['value'], attrs)
  File "/testbed/django/forms/widgets.py", line 615, in optgroups
    subgroup.append(self.create_option(
  File "/testbed/tests/model_forms/test_modelchoicefield.py", line 285, in create_option
    option = super().create_option(name, value, label, selected, index, subindex, attrs)
  File "/testbed/django/forms/widgets.py", line 784, in create_option
    if key in self.show_fields:  # This is a dict {1: ['first_name', 'last_name']}
AttributeError: 'CustomCheckboxSelectMultiple' object has no attribute 'show_fields'

======================================================================
ERROR: test_choice_value_hash (model_forms.test_modelchoicefield.ModelChoiceFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/model_forms/test_modelchoicefield.py", line 347, in test_choice_value_hash
    self.assertEqual(hash(value_1), hash(ModelChoiceIteratorValue(self.c1.pk, None)))
TypeError: unhashable type: 'ModelChoiceIteratorValue'

======================================================================
ERROR: test_custom_choice_iterator_passes_model_to_widget (model_forms.test_modelchoicefield.ModelChoiceFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/model_forms/test_modelchoicefield.py", line 336, in test_custom_choice_iterator_passes_model_to_widget
    field.widget.render('name', []),
  File "/testbed/django/forms/widgets.py", line 248, in render
    context = self.get_context(name, value, attrs)
  File "/testbed/django/forms/widgets.py", line 644, in get_context
    context['widget']['optgroups'] = self.optgroups(name, context['widget']['value'], attrs)
  File "/testbed/django/forms/widgets.py", line 615, in optgroups
    subgroup.append(self.create_option(
  File "/testbed/tests/model_forms/test_modelchoicefield.py", line 324, in create_option
    option = super().create_option(name, value, label, selected, index, subindex, attrs)
  File "/testbed/django/forms/widgets.py", line 784, in create_option
    if key in self.show_fields:  # This is a dict {1: ['first_name', 'last_name']}
AttributeError: 'CustomCheckboxSelectMultiple' object has no attribute 'show_fields'

======================================================================
ERROR: test_no_extra_query_when_accessing_attrs (model_forms.test_modelchoicefield.ModelChoiceFieldTests)
ModelChoiceField with RadioSelect widget doesn't produce unnecessary
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/model_forms/test_modelchoicefield.py", line 205, in test_no_extra_query_when_accessing_attrs
    template.render(Context({'field': field}))
  File "/testbed/django/template/base.py", line 176, in render
    return self._render(context)
  File "/testbed/django/test/utils.py", line 101, in instrumented_test_render
    return self.nodelist.render(context)
  File "/testbed/django/template/base.py", line 977, in render
    return SafeString(''.join([
  File "/testbed/django/template/base.py", line 978, in <listcomp>
    node.render_annotated(context) for node in self
  File "/testbed/django/template/base.py", line 938, in render_annotated
    return self.render(context)
  File "/testbed/django/template/base.py", line 1044, in render
    return render_value_in_context(output, context)
  File "/testbed/django/template/base.py", line 1021, in render_value_in_context
    value = str(value)
  File "/testbed/django/utils/html.py", line 377, in <lambda>
    klass.__str__ = lambda self: mark_safe(klass_str(self))
  File "/testbed/django/forms/boundfield.py", line 33, in __str__
    return self.as_widget()
  File "/testbed/django/forms/boundfield.py", line 92, in as_widget
    return widget.render(
  File "/testbed/django/forms/widgets.py", line 248, in render
    context = self.get_context(name, value, attrs)
  File "/testbed/django/forms/widgets.py", line 644, in get_context
    context['widget']['optgroups'] = self.optgroups(name, context['widget']['value'], attrs)
  File "/testbed/django/forms/widgets.py", line 615, in optgroups
    subgroup.append(self.create_option(
  File "/testbed/django/forms/widgets.py", line 784, in create_option
    if key in self.show_fields:  # This is a dict {1: ['first_name', 'last_name']}
AttributeError: 'RadioSelect' object has no attribute 'show_fields'

======================================================================
ERROR: test_num_queries (model_forms.test_modelchoicefield.ModelChoiceFieldTests)
Widgets that render multiple subwidgets shouldn't make more than one
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/model_forms/test_modelchoicefield.py", line 381, in test_num_queries
    template.render(Context({'form': CategoriesForm()}))
  File "/testbed/django/template/base.py", line 176, in render
    return self._render(context)
  File "/testbed/django/test/utils.py", line 101, in instrumented_test_render
    return self.nodelist.render(context)
  File "/testbed/django/template/base.py", line 977, in render
    return SafeString(''.join([
  File "/testbed/django/template/base.py", line 978, in <listcomp>
    node.render_annotated(context) for node in self
  File "/testbed/django/template/base.py", line 938, in render_annotated
    return self.render(context)
  File "/testbed/django/template/defaulttags.py", line 171, in render
    len_values = len(values)
  File "/testbed/django/forms/boundfield.py", line 60, in __len__
    return len(self.subwidgets)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/forms/boundfield.py", line 47, in subwidgets
    return [
  File "/testbed/django/forms/boundfield.py", line 47, in <listcomp>
    return [
  File "/testbed/django/forms/widgets.py", line 582, in subwidgets
    yield from self.options(name, value, attrs)
  File "/testbed/django/forms/widgets.py", line 586, in options
    for group in self.optgroups(name, value, attrs):
  File "/testbed/django/forms/widgets.py", line 615, in optgroups
    subgroup.append(self.create_option(
  File "/testbed/django/forms/widgets.py", line 784, in create_option
    if key in self.show_fields:  # This is a dict {1: ['first_name', 'last_name']}
AttributeError: 'CheckboxSelectMultiple' object has no attribute 'show_fields'

----------------------------------------------------------------------
Ran 24 tests in 0.028s

FAILED (errors=5)
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
+ git checkout 903aaa35e5ceaa33bfc9b19b7f6da65ce5a91dd4 tests/model_forms/test_modelchoicefield.py
Updated 1 path from e11e4698c8
