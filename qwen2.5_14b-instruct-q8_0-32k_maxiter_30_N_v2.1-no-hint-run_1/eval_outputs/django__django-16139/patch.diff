diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py
index b3cfc6723c..18e5e995d0 100644
--- a/django/contrib/auth/forms.py
+++ b/django/contrib/auth/forms.py
@@ -81,6 +81,41 @@ class UsernameField(forms.CharField):
         }
 
 
+class UserChangeForm(forms.ModelForm):
+    password = ReadOnlyPasswordHashField(
+        label=_("Password"),
+        help_text=_(
+            "Raw passwords are not stored, so there is no way to see this "
+            "userâ€™s password, but you can change the password using "
+            '<a href="{}">this form</a>.'
+        ),
+    )
+
+    class Meta:
+        model = User
+        fields = '__all__'
+
+    def __init__(self, *args, **kwargs):
+        super().__init__(*args, **kwargs)
+        password = self.fields.get("password")
+        if password:
+            # Update the help text to include a dynamic link based on instance.pk
+            password.help_text = password.help_text.format(
+                f"../../{self.instance.pk}/password/"
+            )
+
+class UsernameField(forms.CharField):
+    def to_python(self, value):
+        return unicodedata.normalize("NFKC", super().to_python(value))
+
+    def widget_attrs(self, widget):
+        return {
+            **super().widget_attrs(widget),
+            "autocapitalize": "none",
+            "autocomplete": "username",
+        }
+
+
 class UserCreationForm(forms.ModelForm):
     """
     A form that creates a user, with no privileges, from the given username and
@@ -483,3 +518,4 @@ class AdminPasswordChangeForm(forms.Form):
             if name not in data:
                 return []
         return ["password"]
+
