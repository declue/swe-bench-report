diff --git a/sympy/functions/elementary/hyperbolic.py b/sympy/functions/elementary/hyperbolic.py
index 2a4555d919..20053717e2 100644
--- a/sympy/functions/elementary/hyperbolic.py
+++ b/sympy/functions/elementary/hyperbolic.py
@@ -1398,6 +1398,17 @@ def inverse(self, argindex=1):
         Returns the inverse of this function.
         """
         return csch
+from sympy import *
+
+def coth(expr):
+    if expr is S.ComplexInfinity:
+        return S.One / expr
+    # Add handling for integral values here
+    arg = self.args[0]
+    if arg.is_real and not (arg > -1 and arg < 1):
+        return cosh(arg) / sinh(arg)
+    return Coth(expr)
+
+def _eval_rewrite_as_log(self, arg):
+    return log(1/arg + sqrt(1/arg**2 + 1))
 
-    def _eval_rewrite_as_log(self, arg):
-        return log(1/arg + sqrt(1/arg**2 + 1))
diff --git a/test_subs.py b/test_subs.py
new file mode 100644
index 0000000000..f405c055ed
--- /dev/null
+++ b/test_subs.py
@@ -0,0 +1,4 @@
+from sympy import *
+x = Symbol('x')
+e = coth(log(tan(x)))
+print(e.subs(x, 2))
