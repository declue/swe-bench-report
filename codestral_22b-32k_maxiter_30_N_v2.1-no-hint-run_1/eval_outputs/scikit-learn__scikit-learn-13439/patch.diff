diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 000000000..21235cdd4
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,13 @@
+from sklearn import svm
+from sklearn.datasets import samples_generator
+from sklearn.feature_selection import SelectKBest, f_regression
+from sklearn.pipeline import Pipeline
+
+# generate some data to play with
+X, y = samples_generator.make_classification(n_informative=5, n_redundant=0, random_state=42)
+
+anova_filter = SelectKBest(f_regression, k=5)
+clf = svm.SVC(kernel='linear')
+pipe = Pipeline([('anova', anova_filter), ('svc', clf)])
+
+print(len(pipe))
diff --git a/sklearn/pipeline.py b/sklearn/pipeline.py
index 7eaf9a46f..6099d1365 100644
--- a/sklearn/pipeline.py
+++ b/sklearn/pipeline.py
@@ -90,8 +90,15 @@ class Pipeline(_BaseComposition):
     >>> # You can set the parameters using the names issued
     >>> # For instance, fit using a k of 10 in the SelectKBest
     >>> # and a parameter 'C' of the svm
-    >>> anova_svm.set_params(anova__k=10, svc__C=.1).fit(X, y)
-    ...                      # doctest: +ELLIPSIS, +NORMALIZE_WHITESPACE
+class Pipeline(_BaseComposition):
+    # ... existing code ...
+
+    def __len__(self):
+        return len(self.steps)
+
+>>> anova_svm.set_params(anova__k=10, svc__C=.1).fit(X, y)
+...                      # doctest: +ELLIPSIS, +NORMALIZE_WHITESPACE
+   
     Pipeline(memory=None,
              steps=[('anova', SelectKBest(...)),
                     ('svc', SVC(...))])
@@ -131,6 +138,9 @@ class Pipeline(_BaseComposition):
         self._validate_steps()
         self.memory = memory
 
+    def __len__(self):
+        return len(self.steps)
+   
     def get_params(self, deep=True):
         """Get parameters for this estimator.
 
@@ -929,3 +939,5 @@ def make_union(*transformers, **kwargs):
         raise TypeError('Unknown keyword arguments: "{}"'
                         .format(list(kwargs.keys())[0]))
     return FeatureUnion(_name_estimators(transformers), n_jobs=n_jobs)
+
+
